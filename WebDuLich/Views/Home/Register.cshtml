@model WebDuLich.Models.Entities.Customer

@{
    ViewBag.Title = "Register";
    Layout = "~/Views/Shared/Web_Layout.cshtml";
}

@*@using (Html.BeginForm())
    {


    <div class="modal js-modal">
        <div class="modal-container js-modal-container">
            <div class="modal-close js-modal-close">
                <i class="ti-close"></i>
            </div>
            @Html.AntiForgeryToken()
            <header class="modal-header">
                <i class="ti-bag"></i>
                <h4 style="text-align : center ;color:green">Customer</h4>
            </header>
            @Html.ValidationSummary(true, "", new { @class = "text-danger" })

            <div class="modal-body">
                <label for="ticket-quantity" class="modal-label">
                    @Html.LabelFor(model => model.FullName)
                </label>

                @Html.EditorFor(model => model.FullName, new { htmlAttributes = new { @id = "ticket-quantity", @type = "text", @class = "modal-input" } })
                @Html.ValidationMessageFor(model => model.FullName, "", new { @id = "ticket-quantity", @type = "text", @class = "modal-input" })
                <label for="ticket-quantity" class="modal-label">
                    @Html.LabelFor(model => model.Email)
                </label>

                @Html.EditorFor(model => model.Email, new { htmlAttributes = new { @id = "ticket-quantity", @type = "text", @class = "modal-input" } })
                @Html.ValidationMessageFor(model => model.Email, "", new { @id = "ticket-quantity", @type = "text", @class = "modal-input" })
                <label for="ticket-quantity" class="modal-label">
                    @Html.LabelFor(model => model.Password)
                </label>
                @Html.EditorFor(model => model.Password, new { htmlAttributes = new { @id = "ticket-quantity", @type = "text", @class = "modal-input" } })
                @Html.ValidationMessageFor(model => model.Password, "", new { @id = "ticket-quantity", @type = "text", @class = "modal-input" })

                <button id="buy-tickets" type="submit" value="Create" class="btn btn-primary">
                </button>

            </div>

        </div>
    </div>}*@


<br />
<br />
<br />
<br />
<div class="row justify-content-md-center">
    <div class="col-md-4">
        <div class="card">
            <div class="card-header">
                <h2 style="text-align : center;color: green;">Register</h2>
            </div>
            <div class="card-body ">
                @using (Html.BeginForm())
                {
                    @Html.AntiForgeryToken()
                    @Html.ValidationSummary(true, "", new { @class = "text-danger" })
                    <div class="form-group">
                        @Html.LabelFor(model => model.FullName)
                        <div>
                            @Html.EditorFor(model => model.FullName, new { htmlAttributes = new { @class = "form-control", @placeholder = "FullName" } })
                            @Html.ValidationMessageFor(model => model.FullName, "", new { @class = "text-danger" })
                        </div>
                    </div>

                    <div class="form-group">
                        @Html.LabelFor(model => model.Email)
                        <div>
                            @Html.EditorFor(model => model.Email, new { htmlAttributes = new { @class = "form-control", @placeholder = "Email" } })
                            @Html.ValidationMessageFor(model => model.Email, "", new { @class = "text-danger" })
                        </div>
                    </div>

                    <div class="form-group">
                        @Html.LabelFor(model => model.Password)
                        <div>
                            @Html.EditorFor(model => model.Password, new { htmlAttributes = new { @class = "form-control", @placeholder = "Password" } })
                            @Html.ValidationMessageFor(model => model.Password, "", new { @class = "text-danger" })

                        </div>
                        
                    </div>
                    <div class="form-group">
                        @Html.LabelFor(model => model.Roles, htmlAttributes: new { @class = "control-label col-md-2" })
                        <div class="col-md-10">
                            @Html.EditorFor(model => model.Roles, new { htmlAttributes = new { @class = "form-control" , @placeholder = "user" } })
                            @Html.ValidationMessageFor(model => model.Roles, "", new { @class = "text-danger" })
                        </div>
                        <br />
                    </div>


                    <div class="form-group">
                        <div>
                            <input type="submit" value="Create" class="btn btn-primary" />
                        </div>
                        <br />
                    </div>
                }
            </div>
        </div>
    </div>
</div>
<br />
@*<script>

        const buyBtns = document.querySelectorAll('.js-buy-ticket')
        const modal = document.querySelector('.js-modal')
        const modalContainer = document.querySelector('.js-modal-container')
        const modalClose = document.querySelector('.js-modal-close')

        function showBuyTickets() {
            modal.classList.add('open')
        }

        function hideBuyTickets() {
            modal.classList.remove('open')
        }

        for (const buyBtn of buyBtns) {
            buyBtn.addEventListener('click', showBuyTickets)
        }

        modalClose.addEventListener('click', hideBuyTickets)

        modal.addEventListener('click', hideBuyTickets)

        modalContainer.addEventListener('click', function (event) {
            event.stopPropagation()
        })
    </script>*@

